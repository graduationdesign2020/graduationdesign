{"version":3,"sources":["index.js","utils.js","targets.js","options.js","pretty.js","debug.js","filter-items.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,AENA,ADGA;ADIA,AENA,ADGA;ADIA,AENA,ADGA;ADIA,AGTA,ADGA,ADGA;ADIA,AGTA,ADGA,ADGA;ADIA,AGTA,ADGA,ADGA;ADIA,AGTA,ACHA,AFMA,ADGA;ADIA,AGTA,ACHA,AFMA,ADGA;ADIA,AGTA,ACHA,AFMA,ADGA;AIXA,ALeA,AGTA,ACHA,AFMA,ADGA;AIXA,ALeA,AGTA,ACHA,AFMA,ADGA;AIXA,ALeA,AGTA,ACHA,AFMA,ADGA;AIXA,ACHA,ANkBA,AGTA,ACHA,AFMA,ADGA;AIXA,ACHA,ANkBA,AGTA,ACHA,AFMA,ADGA;AIXA,ACHA,ANkBA,AGTA,ACHA,AFMA,ADGA;AIXA,ACHA,ANkBA,AGTA,ACHA,AFMA,ADGA;AIXA,ACHA,ANkBA,AGTA,ACHA,AFMA,ADGA;AIXA,ACHA,ANkBA,AGTA,ACHA,AFMA,ADGA;AIXA,ACHA,ANkBA,AGTA,ACHA,AFMA,ADGA;AIXA,ACHA,ANkBA,AGTA,ACHA,AFMA,ADGA;AIXA,ACHA,ANkBA,AGTA,ACHA,AFMA,ADGA;AIXA,ACHA,ANkBA,AGTA,ACHA,AFMA,ADGA;AIXA,ACHA,ANkBA,AGTA,ACHA,AFMA,ADGA;AIXA,ACHA,ANkBA,AIZA,AFMA,ADGA;AIXA,ACHA,ANkBA,AIZA,AFMA,ADGA;AIXA,ACHA,ANkBA,AIZA,AFMA,ADGA;AIXA,ACHA,ANkBA,AIZA,AFMA,ADGA;AIXA,ACHA,ANkBA,AIZA,AHSA;AIXA,ACHA,ANkBA,AIZA,AHSA;AIXA,ACHA,ANkBA,AIZA,AHSA;AIXA,ACHA,ANkBA,AIZA,AHSA;AIXA,ACHA,ANkBA,AIZA,AHSA;AIXA,ACHA,ANkBA,AIZA,AHSA;AIXA,ACHA,ANkBA,AIZA,AHSA;AIXA,ACHA,ANkBA,AIZA,AHSA;AIXA,ACHA,ANkBA,AIZA,AHSA;AIXA,ACHA,ANkBA,AIZA,AHSA;AIXA,ACHA,ANkBA,AIZA,AHSA;AIXA,ACHA,ANkBA,AIZA,AHSA;AIXA,ACHA,ANkBA,AIZA,AHSA;AIXA,ACHA,ANkBA,AIZA,AHSA;AIXA,ACHA,ANkBA,AIZA,AHSA;AIXA,ACHA,ANkBA,AIZA,AHSA;AIXA,ACHA,ANkBA,AIZA,AHSA;AKdA,ANkBA,AIZA,AHSA;AKdA,ANkBA,AIZA,AHSA;AKdA,ANkBA,AIZA,AHSA;AKdA,ANkBA,AIZA,AHSA;AKdA,ANkBA,AIZA,AHSA;AKdA,ANkBA,AIZA,AHSA;AKdA,ANkBA,AIZA,AHSA;AKdA,ANkBA,AIZA,AHSA;AKdA,ANkBA,AIZA,AHSA;AKdA,ANkBA,AIZA,AHSA;AKdA,ANkBA,AIZA,AHSA;AKdA,ANkBA,ACHA;AKdA,ANkBA,ACHA;AKdA,ANkBA,ACHA;AKdA,ANkBA,ACHA;AKdA,ANkBA,ACHA;AKdA,ANkBA,ACHA;AKdA,ANkBA,ACHA;AKdA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkBA;AMjBA,ANkfile":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isBrowsersQueryValid = isBrowsersQueryValid;\nexports.default = getTargets;\nObject.defineProperty(exports, \"unreleasedLabels\", {\n  enumerable: true,\n  get: function () {\n    return _targets.unreleasedLabels;\n  }\n});\nObject.defineProperty(exports, \"prettifyTargets\", {\n  enumerable: true,\n  get: function () {\n    return _pretty.prettifyTargets;\n  }\n});\nObject.defineProperty(exports, \"getInclusionReasons\", {\n  enumerable: true,\n  get: function () {\n    return _debug.getInclusionReasons;\n  }\n});\nObject.defineProperty(exports, \"filterItems\", {\n  enumerable: true,\n  get: function () {\n    return _filterItems.default;\n  }\n});\nObject.defineProperty(exports, \"isRequired\", {\n  enumerable: true,\n  get: function () {\n    return _filterItems.isRequired;\n  }\n});\n\nvar _browserslist = _interopRequireDefault(require(\"browserslist\"));\n\nvar _levenary = _interopRequireDefault(require(\"levenary\"));\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _nativeModules = _interopRequireDefault(require(\"@babel/compat-data/native-modules\"));\n\nvar _utils = require(\"./utils\");\n\nvar _targets = require(\"./targets\");\n\nvar _options = require(\"./options\");\n\nvar _pretty = require(\"./pretty\");\n\nvar _debug = require(\"./debug\");\n\nvar _filterItems = _interopRequireWildcard(require(\"./filter-items\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst browserslistDefaults = _browserslist.default.defaults;\nconst validBrowserslistTargets = [...Object.keys(_browserslist.default.data), ...Object.keys(_browserslist.default.aliases)];\n\nfunction objectToBrowserslist(object) {\n  return Object.keys(object).reduce((list, targetName) => {\n    if (validBrowserslistTargets.indexOf(targetName) >= 0) {\n      const targetVersion = object[targetName];\n      return list.concat(`${targetName} ${targetVersion}`);\n    }\n\n    return list;\n  }, []);\n}\n\nfunction validateTargetNames(targets) {\n  const validTargets = Object.keys(_options.TargetNames);\n\n  for (const target in targets) {\n    if (!_options.TargetNames[target]) {\n      throw new Error(`Invalid Option: '${target}' is not a valid target\n        Maybe you meant to use '${(0, _levenary.default)(target, validTargets)}'?`);\n    }\n  }\n\n  return targets;\n}\n\nfunction isBrowsersQueryValid(browsers) {\n  return typeof browsers === \"string\" || Array.isArray(browsers);\n}\n\nfunction validateBrowsers(browsers) {\n  (0, _invariant.default)(typeof browsers === \"undefined\" || isBrowsersQueryValid(browsers), `Invalid Option: '${String(browsers)}' is not a valid browserslist query`);\n  return browsers;\n}\n\nfunction getLowestVersions(browsers) {\n  return browsers.reduce((all, browser) => {\n    const [browserName, browserVersion] = browser.split(\" \");\n    const normalizedBrowserName = _targets.browserNameMap[browserName];\n\n    if (!normalizedBrowserName) {\n      return all;\n    }\n\n    try {\n      const splitVersion = browserVersion.split(\"-\")[0].toLowerCase();\n      const isSplitUnreleased = (0, _utils.isUnreleasedVersion)(splitVersion, browserName);\n\n      if (!all[normalizedBrowserName]) {\n        all[normalizedBrowserName] = isSplitUnreleased ? splitVersion : (0, _utils.semverify)(splitVersion);\n        return all;\n      }\n\n      const version = all[normalizedBrowserName];\n      const isUnreleased = (0, _utils.isUnreleasedVersion)(version, browserName);\n\n      if (isUnreleased && isSplitUnreleased) {\n        all[normalizedBrowserName] = (0, _utils.getLowestUnreleased)(version, splitVersion, browserName);\n      } else if (isUnreleased) {\n        all[normalizedBrowserName] = (0, _utils.semverify)(splitVersion);\n      } else if (!isUnreleased && !isSplitUnreleased) {\n        const parsedBrowserVersion = (0, _utils.semverify)(splitVersion);\n        all[normalizedBrowserName] = (0, _utils.semverMin)(version, parsedBrowserVersion);\n      }\n    } catch (e) {}\n\n    return all;\n  }, {});\n}\n\nfunction outputDecimalWarning(decimalTargets) {\n  if (!(decimalTargets == null ? void 0 : decimalTargets.length)) {\n    return;\n  }\n\n  console.log(\"Warning, the following targets are using a decimal version:\");\n  console.log(\"\");\n  decimalTargets.forEach(({\n    target,\n    value\n  }) => console.log(`  ${target}: ${value}`));\n  console.log(\"\");\n  console.log(\"We recommend using a string for minor/patch versions to avoid numbers like 6.10\");\n  console.log(\"getting parsed as 6.1, which can lead to unexpected behavior.\");\n  console.log(\"\");\n}\n\nfunction semverifyTarget(target, value) {\n  try {\n    return (0, _utils.semverify)(value);\n  } catch (error) {\n    throw new Error(`Invalid Option: '${value}' is not a valid value for 'targets.${target}'.`);\n  }\n}\n\nconst targetParserMap = {\n  __default(target, value) {\n    const version = (0, _utils.isUnreleasedVersion)(value, target) ? value.toLowerCase() : semverifyTarget(target, value);\n    return [target, version];\n  },\n\n  node(target, value) {\n    const parsed = value === true || value === \"current\" ? process.versions.node : semverifyTarget(target, value);\n    return [target, parsed];\n  }\n\n};\n\nfunction getTargets(inputTargets = {}, options = {}) {\n  const targetOpts = {};\n  let {\n    browsers\n  } = inputTargets;\n\n  if (inputTargets.esmodules) {\n    const supportsESModules = _nativeModules.default[\"es6.module\"];\n    browsers = Object.keys(supportsESModules).map(browser => `${browser} ${supportsESModules[browser]}`).join(\", \");\n  }\n\n  const browsersquery = validateBrowsers(browsers);\n  const input = Object.assign({}, inputTargets);\n  delete input.esmodules;\n  delete input.browsers;\n  let targets = validateTargetNames(input);\n  const shouldParseBrowsers = !!browsersquery;\n  const hasTargets = shouldParseBrowsers || Object.keys(targets).length > 0;\n  const shouldSearchForConfig = !options.ignoreBrowserslistConfig && !hasTargets;\n\n  if (shouldParseBrowsers || shouldSearchForConfig) {\n    if (!hasTargets) {\n      _browserslist.default.defaults = objectToBrowserslist(targets);\n    }\n\n    const browsers = (0, _browserslist.default)(browsersquery, {\n      path: options.configPath,\n      mobileToDesktop: true,\n      env: options.browserslistEnv\n    });\n    const queryBrowsers = getLowestVersions(browsers);\n    targets = Object.assign(queryBrowsers, targets);\n    _browserslist.default.defaults = browserslistDefaults;\n  }\n\n  const parsed = Object.keys(targets).sort().reduce((results, target) => {\n    var _targetParserMap$targ;\n\n    const value = targets[target];\n\n    if (typeof value === \"number\" && value % 1 !== 0) {\n      results.decimalWarnings.push({\n        target,\n        value\n      });\n    }\n\n    const parser = (_targetParserMap$targ = targetParserMap[target]) != null ? _targetParserMap$targ : targetParserMap.__default;\n    const [parsedTarget, parsedValue] = parser(target, value);\n\n    if (parsedValue) {\n      results.targets[parsedTarget] = parsedValue;\n    }\n\n    return results;\n  }, {\n    targets: targetOpts,\n    decimalWarnings: []\n  });\n  outputDecimalWarning(parsed.decimalWarnings);\n  return parsed.targets;\n}","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.semverMin = semverMin;\nexports.semverify = semverify;\nexports.isUnreleasedVersion = isUnreleasedVersion;\nexports.getLowestUnreleased = getLowestUnreleased;\nexports.getLowestImplementedVersion = getLowestImplementedVersion;\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _semver = _interopRequireDefault(require(\"semver\"));\n\nvar _targets = require(\"./targets\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst versionRegExp = /^(\\d+|\\d+.\\d+)$/;\n\nfunction semverMin(first, second) {\n  return first && _semver.default.lt(first, second) ? first : second;\n}\n\nfunction semverify(version) {\n  if (typeof version === \"string\" && _semver.default.valid(version)) {\n    return version;\n  }\n\n  (0, _invariant.default)(typeof version === \"number\" || typeof version === \"string\" && versionRegExp.test(version), `'${version}' is not a valid version`);\n  const split = version.toString().split(\".\");\n\n  while (split.length < 3) {\n    split.push(\"0\");\n  }\n\n  return split.join(\".\");\n}\n\nfunction isUnreleasedVersion(version, env) {\n  const unreleasedLabel = _targets.unreleasedLabels[env];\n  return !!unreleasedLabel && unreleasedLabel === version.toString().toLowerCase();\n}\n\nfunction getLowestUnreleased(a, b, env) {\n  const unreleasedLabel = _targets.unreleasedLabels[env];\n  const hasUnreleased = [a, b].some(item => item === unreleasedLabel);\n\n  if (hasUnreleased) {\n    return a === hasUnreleased ? b : a || b;\n  }\n\n  return semverMin(a, b);\n}\n\nfunction getLowestImplementedVersion(plugin, environment) {\n  const result = plugin[environment];\n\n  if (!result && environment === \"android\") {\n    return plugin.chrome;\n  }\n\n  return result;\n}","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.browserNameMap = exports.unreleasedLabels = void 0;\nconst unreleasedLabels = {\n  safari: \"tp\"\n};\nexports.unreleasedLabels = unreleasedLabels;\nconst browserNameMap = {\n  and_chr: \"chrome\",\n  and_ff: \"firefox\",\n  android: \"android\",\n  chrome: \"chrome\",\n  edge: \"edge\",\n  firefox: \"firefox\",\n  ie: \"ie\",\n  ie_mob: \"ie\",\n  ios_saf: \"ios\",\n  node: \"node\",\n  op_mob: \"opera\",\n  opera: \"opera\",\n  safari: \"safari\",\n  samsung: \"samsung\"\n};\nexports.browserNameMap = browserNameMap;","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TargetNames = void 0;\nconst TargetNames = {\n  node: \"node\",\n  chrome: \"chrome\",\n  opera: \"opera\",\n  edge: \"edge\",\n  firefox: \"firefox\",\n  safari: \"safari\",\n  ie: \"ie\",\n  ios: \"ios\",\n  android: \"android\",\n  electron: \"electron\",\n  samsung: \"samsung\"\n};\nexports.TargetNames = TargetNames;","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.prettifyVersion = prettifyVersion;\nexports.prettifyTargets = prettifyTargets;\n\nvar _semver = _interopRequireDefault(require(\"semver\"));\n\nvar _targets = require(\"./targets\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction prettifyVersion(version) {\n  if (typeof version !== \"string\") {\n    return version;\n  }\n\n  const parts = [_semver.default.major(version)];\n\n  const minor = _semver.default.minor(version);\n\n  const patch = _semver.default.patch(version);\n\n  if (minor || patch) {\n    parts.push(minor);\n  }\n\n  if (patch) {\n    parts.push(patch);\n  }\n\n  return parts.join(\".\");\n}\n\nfunction prettifyTargets(targets) {\n  return Object.keys(targets).reduce((results, target) => {\n    let value = targets[target];\n    const unreleasedLabel = _targets.unreleasedLabels[target];\n\n    if (typeof value === \"string\" && unreleasedLabel !== value) {\n      value = prettifyVersion(value);\n    }\n\n    results[target] = value;\n    return results;\n  }, {});\n}","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getInclusionReasons = getInclusionReasons;\n\nvar _semver = _interopRequireDefault(require(\"semver\"));\n\nvar _pretty = require(\"./pretty\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getInclusionReasons(item, targetVersions, list) {\n  const minVersions = list[item] || {};\n  return Object.keys(targetVersions).reduce((result, env) => {\n    const minVersion = (0, _utils.getLowestImplementedVersion)(minVersions, env);\n    const targetVersion = targetVersions[env];\n\n    if (!minVersion) {\n      result[env] = (0, _pretty.prettifyVersion)(targetVersion);\n    } else {\n      const minIsUnreleased = (0, _utils.isUnreleasedVersion)(minVersion, env);\n      const targetIsUnreleased = (0, _utils.isUnreleasedVersion)(targetVersion, env);\n\n      if (!targetIsUnreleased && (minIsUnreleased || _semver.default.lt(targetVersion.toString(), (0, _utils.semverify)(minVersion)))) {\n        result[env] = (0, _pretty.prettifyVersion)(targetVersion);\n      }\n    }\n\n    return result;\n  }, {});\n}","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.targetsSupported = targetsSupported;\nexports.isRequired = isRequired;\nexports.default = filterItems;\n\nvar _semver = _interopRequireDefault(require(\"semver\"));\n\nvar _plugins = _interopRequireDefault(require(\"@babel/compat-data/plugins\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction targetsSupported(target, support) {\n  const targetEnvironments = Object.keys(target);\n\n  if (targetEnvironments.length === 0) {\n    return false;\n  }\n\n  const unsupportedEnvironments = targetEnvironments.filter(environment => {\n    const lowestImplementedVersion = (0, _utils.getLowestImplementedVersion)(support, environment);\n\n    if (!lowestImplementedVersion) {\n      return true;\n    }\n\n    const lowestTargetedVersion = target[environment];\n\n    if ((0, _utils.isUnreleasedVersion)(lowestTargetedVersion, environment)) {\n      return false;\n    }\n\n    if ((0, _utils.isUnreleasedVersion)(lowestImplementedVersion, environment)) {\n      return true;\n    }\n\n    if (!_semver.default.valid(lowestTargetedVersion.toString())) {\n      throw new Error(`Invalid version passed for target \"${environment}\": \"${lowestTargetedVersion}\". ` + \"Versions must be in semver format (major.minor.patch)\");\n    }\n\n    return _semver.default.gt((0, _utils.semverify)(lowestImplementedVersion), lowestTargetedVersion.toString());\n  });\n  return unsupportedEnvironments.length === 0;\n}\n\nfunction isRequired(name, targets, {\n  compatData = _plugins.default,\n  includes,\n  excludes\n} = {}) {\n  if (excludes == null ? void 0 : excludes.has(name)) return false;\n  if (includes == null ? void 0 : includes.has(name)) return true;\n  return !targetsSupported(targets, compatData[name]);\n}\n\nfunction filterItems(list, includes, excludes, targets, defaultIncludes, defaultExcludes, pluginSyntaxMap) {\n  const result = new Set();\n  const options = {\n    compatData: list,\n    includes,\n    excludes\n  };\n\n  for (const item in list) {\n    if (isRequired(item, targets, options)) {\n      result.add(item);\n    } else if (pluginSyntaxMap) {\n      const shippedProposalsSyntax = pluginSyntaxMap.get(item);\n\n      if (shippedProposalsSyntax) {\n        result.add(shippedProposalsSyntax);\n      }\n    }\n  }\n\n  if (defaultIncludes) {\n    defaultIncludes.forEach(item => !excludes.has(item) && result.add(item));\n  }\n\n  if (defaultExcludes) {\n    defaultExcludes.forEach(item => !includes.has(item) && result.delete(item));\n  }\n\n  return result;\n}"]}