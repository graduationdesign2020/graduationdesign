{"ast":null,"code":"var _jsxFileName = \"/Users/mac/MyProject/graduationdesign_web/src/Routes/BasicRoute.js\";\nimport React, { useState } from 'react';\nimport { Router, Switch, Redirect } from 'react-router-dom';\nimport LoginView from \"../views/LoginView\";\nimport { history } from \"../utils/history\";\nimport { AuthedContext } from \"../utils/authed\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport LoginRoute from \"./LoginRoute\";\nimport ProcessDetail from \"../Views/ProcessDetail\";\nexport default function BasicRoute(props) {\n  history.listen((location, action) => {\n    // clear alert on location change\n    console.log(location, action);\n  });\n  const [isAuthed, setIsAuthed] = useState(false);\n  const [userInfo, setUserInfo] = useState({});\n\n  function authedSuccess() {\n    setIsAuthed(true);\n  }\n\n  return /*#__PURE__*/React.createElement(AuthedContext.Provider, {\n    value: {\n      isAuthed,\n      authedSuccess,\n      userInfo,\n      setUserInfo\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    history: history,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/\",\n    component: ProcessDetail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(LoginRoute, {\n    exact: true,\n    path: \"/login\",\n    component: LoginView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/mac/MyProject/graduationdesign_web/src/Routes/BasicRoute.js"],"names":["React","useState","Router","Switch","Redirect","LoginView","history","AuthedContext","PrivateRoute","LoginRoute","ProcessDetail","BasicRoute","props","listen","location","action","console","log","isAuthed","setIsAuthed","userInfo","setUserInfo","authedSuccess"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,QAAzB,QAAwC,kBAAxC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACtCN,EAAAA,OAAO,CAACO,MAAR,CAAe,CAACC,QAAD,EAAWC,MAAX,KAAsB;AACjC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqBC,MAArB;AACH,GAHD;AAKA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASqB,aAAT,GAAyB;AACrBH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACD,MAAAA,QAAD;AAAWI,MAAAA,aAAX;AAA0BF,MAAAA,QAA1B;AAAoCC,MAAAA;AAApC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEf,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAoB,IAAA,IAAI,EAAC,GAAzB;AAA6B,IAAA,SAAS,EAAEI,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,UAAD;AAAY,IAAA,KAAK,MAAjB;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAgC,IAAA,SAAS,EAAEL,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ,CADJ;AAWH","sourcesContent":["import React, {useState} from 'react';\nimport { Router, Switch, Redirect} from 'react-router-dom';\nimport LoginView from \"../views/LoginView\";\nimport {history} from \"../utils/history\";\nimport {AuthedContext} from \"../utils/authed\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport LoginRoute from \"./LoginRoute\";\nimport ProcessDetail from \"../Views/ProcessDetail\";\n\nexport default function BasicRoute(props) {\n    history.listen((location, action) => {\n        // clear alert on location change\n        console.log(location,action);\n    });\n\n    const [isAuthed, setIsAuthed] = useState(false);\n    const [userInfo, setUserInfo] = useState({});\n\n    function authedSuccess() {\n        setIsAuthed(true);\n    }\n\n    return(\n        <AuthedContext.Provider value={{isAuthed, authedSuccess, userInfo, setUserInfo}}>\n            <Router history={history}>\n                <Switch>\n                    <PrivateRoute exact path=\"/\" component={ProcessDetail}/>\n                    <LoginRoute exact path=\"/login\" component={LoginView}/>\n                </Switch>\n            </Router>\n        </AuthedContext.Provider>\n    );\n\n}\n"]},"metadata":{},"sourceType":"module"}